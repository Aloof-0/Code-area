# >>>NUM = 1
# >>>NUM +=1                     #等价于NUM=NUM+1
# >>>NUM
# 2
# >>>NUM=NUM+1
# >>>NUM
# 3
# >>>NUM -=1                     #等价于NUM=NUM-1
# >>>NUM
# >>>2
# >>>NUM *=2                     #等价于NUM=NUM*2
# >>>NUM
# 4
# >>>NUM /=2                     #等价与NUM=NUM/2
# >>NUM
# 2.0
#
#
# >>>NUM=4
# >>>NUM //=2
# 2                           #等价于NUM=NUM//2(整除)


''' 
赋值运算符:=,+=,-=,*=,/=,//=,%=,**=
         
         NUM +=1      等价于 NUM = NUM + 1   
         NUM -=1      等价于 NUM = NUM - 1 
         NUM *=2      等价于 NUM = NUM * 2      (乘以)
         NUM /=2      等价于 NUM = NUM / 2      (除以)
         NUM //=2     等价于 NUM = NUM // 2     (整除) 
         NUM %=2      等价于 NUM = NUM % 2      (取余)
         NUM **=2     等价于 NUM = NUM ** 2     (次方)   
'''

'''
比较运算符:>,<,>=,<=,==,!=
顾名思义,比较运算符是用来做比较的,比较的结果会有两种,分别是成立和不成立的,成立的时候是true,不成立的结果是flase
true,flase是用来表示比较后的结果.

>>> a = 5
>>> b = 3
>>> a > b             检查左操作的值是否大于右操作数的值,如果是,则条件成立
True
>>> a < b             检查左操作的值是否小于右操作数的值,如果否,则条件不成立
Flase
>>> a >= b            检查左操作的值是否大于等于右操作数的值,如果是,则条件成立
true
>>> a <= b            检查左操作的值是否小于等于右操作数的值,如果否,则条件不成立
False
>>> a == b            检查左操作的值是否等于右操作数的值,如果否,则条件不成立
False
>>> a != b            检查左操作的值是否不等于右操作数的值,如果是,则条件成立
true
'''

'''
逻辑运算符: not,and,or
逻辑运算符是用来做逻辑运算的.像我们上面用到的比较运算符,每一次比较其实都是一种条件判断,都会得到一个True或Flase的值.
而逻辑运算符的操作数就是一个用来做条件判断的表达式或者变量.


>>>A = 5
>>>B = 3 

>>>A > b and A < B                如果两个操作都是True,那么结果为True,否则结果为Flase(两个操作都要对,and才对)
False

>>>A > B or  A < B                如果两个操作至少一个是True,那么结果为True,否则结果为Flase(两个操作只要对一个,or才对)      
True

>>>not A > B                      反转操作的状态,操作为True,反之则为Flase(本来是对的,但是输出结果为Flase)
False

短路原则:

对于and
如果前面的条件为假,那么这个and前后两个条件组成的表达式的计算结果就一定为假,第二个条件就不会被计算.

对于or
如果前面的第一个条件为真,那么这个or前后两个条件组成的表达式的计算结果就一定为真,第二个条件就不会被计算
'''

'''
优先级：
or < and < not

1.比如:5>4 or 6<5 and 4<3
  
...(1)5>4 or ( {6<5} and {4<3} )          ##因为and的优先级比or的优先级大,所以先算and里面的,再算or的
...(2)5>4 or  False                       ##因为or的定义(如上)且5>4,所以至少一个是True
...(3)True                                ##则输出TURE

2.比如:5<4 or 6<3 and not 4<9
 
...(1)5<4 or ({6<3} and {[not 4<9]})
...(2)5<4 or ({6<3} and False})
...(3)5<4 or False
...(4)False

'''


#=是赋值运算符,==是比较运算符,用来做比较两个变量的值是不是一样.